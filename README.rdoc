library
=======

User managed library as final AdvanceSummer2014 project.

Code Climate: {<img src="https://codeclimate.com/github/jatla/library/badges/gpa.svg" />}[https://codeclimate.com/github/jatla/library]

Test Coverage: {<img src="https://codeclimate.com/github/jatla/library/badges/coverage.svg" />}[https://codeclimate.com/github/jatla/library]

=== Setup

* Ruby Version: 2.1.2
* Rails Version: 4.1.4
* Get the application and do 'bundle install'.

==== Using google authentication
	- Setup new project at https://code.google.com/apis/console.Get CLIENT ID & CLIENT SECRET and set in application.yml at Rails.root/config.

	GOOGLE_APP_ID: <CLIENT ID>
	GOOGLE_APP_SECRET: <CLIENT SECRET>

	- Enable Contacts API and Google+ API.
	- Set REDIRECT URIS value to http://<host:port>/users/auth/google_oauth2/callback

==== AWS Setup:

* Visit http://aws.amazon.com for creating account before proceeding.

		Add the following information about your AWS account to application.yml
		AWS_ACCESS_KEY: <access key>
		AWS_SECRET_KEY: <secret key>
		AWS_REGION: <aws region> http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions-availability-zones

* SES:

		This application uses AWS SimpleEmailService for sending mails. Visit http://docs.aws.amazon.com/ses/latest/DeveloperGuide/setting-up-ses.html to setup SES.

		Add the following lines to your application.yml
		AWS_SES_SMTP_ENDPOINT: email-smtp.us-west-2.amazonaws.com <or anyone that you prefer>
		SMTP_USER: <SMTP USER>
		SMTP_PWD: <SMTP PASSWORD>

		config.action_mailer.delivery_method = :smtp
		config.action_mailer.smtp_settings = {
		  :address => ENV["AWS_SES_SMTP_ENDPOINT"],
		  :user_name => ENV["SMTP_USER"], # Your SMTP user here.
		  :password => ENV["SMTP_PWD"], # Your SMTP password here.
		  :domain => <Your domain name>,
		  :port => 465,
		  :authentication => :login,
		  :enable_starttls_auto => true,
		  :ssl => true
		}

		Dont forget to change the spf record of your domain to allow emails from amazonses.com

* S3:

		AWS SimpleStorageService is used to store book images. For detailed setup instructions follow http://docs.aws.amazon.com/AmazonS3/latest/gsg/SigningUpforS3.html.

		Create a S3 bucket. This application uses carrierwave and fog gems to interact with S3. Set the following config in carrierwave.rb.

		config.fog_directory  = 'your-bucket-name'  

=== Original requirements and corresponding github issues:

* Implemented:
	# Anyone can see all the book titles and ratings in the library - https://github.com/jatla/library/issues/10
	# You must login to add library books - https://github.com/jatla/library/issues/12
	# Admin must approve the addition of lib books - https://github.com/jatla/library/issues/13
	# Books must have a picture associated with them to be approved -https://github.com/jatla/library/issues/15
	# You can only edit/destroy books you entered into the system - https://github.com/jatla/library/issues/16
	# You must be logged in to rate a book - https://github.com/jatla/library/issues/17
	# You can give a book 1-5 stars - https://github.com/jatla/library/issues/19
	# You can add a review to any book - https://github.com/jatla/library/issues/20
	# If a book has ratings or reviews, you can not destroy it, only deactivate it - https://github.com/jatla/library/issues/21
	# Deactivated books can not get new reviews or ratings - https://github.com/jatla/library/issues/22
	# Users can receive emails when their books get rated or reviewed - https://github.com/jatla/library/issues/25
	# Users can "follow" books - which means they get email notifications on ratings and reviews - https://github.com/jatla/library/issues/26
	# Users can opt out of all or by book rating emails - https://github.com/jatla/library/issues/28
	# Users can opt out of all or by book review emails - https://github.com/jatla/library/issues/29
	# Users can configure their email preferences - https://github.com/jatla/library/issues/27
	# Users can ask to receive a daily digest of email notifications instead of individual notifications - https://github.com/jatla/library/issues/31 (User can configure but mailer doesnt yet use this config)
	# Admins can block users from creating ratings or reviews in the system - https://github.com/jatla/library/issues/30
	# Books should be searchable by title, author, ISBN, tags, ratings, and reviews - https://github.com/jatla/library/issues/23
	# Book and review listings are sortable, and paginated (default sort for Books and Reviews is rating) - https://github.com/jatla/library/issues/32
	# Admins can create/invite other admins - https://github.com/jatla/library/issues/34
	# Users can invite other users - https://github.com/jatla/library/issues/33

* Not implemented
	# To rate a book you must click on stars - https://github.com/jatla/library/issues/18
	# Admins can see a report of activities by User:  - https://github.com/jatla/library/issues/24
		•	Most active* users, 
		•	Users who give the lowest ratings, 
		•	Users who give the highest ratings, 
		•	Users who login most often, 
		•	Users with the most reviews, and 
		•	Users who enter the most books.
	# Admins can login as any other user in the system
	# When an Admin logs in as another user, the Admin's activities do not impact the User's activity ratings in the system



